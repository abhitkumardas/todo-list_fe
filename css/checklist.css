body {
    font-family: 'Open Sans', sans-serif;
    background: #FFFFFF;
    /* margin: 0 0 0 auto;   */
    width: 100%;
    margin: 0px 0px 20px 0px;
    background-image: url("../../FE/images/03.jpg");
}

.scrollable {
    overflow-y: scroll;
    /* overflow: auto; */
}

.scrollable::-webkit-scrollbar {
    display: none;
}


/*
=====
LEVEL 1. CORE STYLES
=====
*/

.toggle {
    --uiToggleSize: var(--toggleSize, 30px);
    --uiToggleIndent: var(--toggleIndent, .4em);
    --uiToggleBorderWidth: var(--toggleBorderWidth, 2px);
    --uiToggleColor: var(--toggleColor, #000);
    --uiToggleDisabledColor: var(--toggleDisabledColor, #868e96);
    --uiToggleBgColor: var(--toggleBgColor, #fff);
    --uiToggleArrowWidth: var(--toggleArrowWidth, 2px);
    --uiToggleArrowColor: var(--toggleArrowColor, #fff);
    display: inline-block;
    position: relative;
}

.toggle__input {
    position: absolute;
    left: -99999px;
}

.toggle__label {
    display: inline-flex;
    cursor: pointer;
    min-height: var(--uiToggleSize);
    padding-left: calc(var(--uiToggleSize) + var(--uiToggleIndent));
}

.toggle__label:before,
.toggle__label:after {
    content: "";
    box-sizing: border-box;
    width: 1em;
    height: 1em;
    font-size: var(--uiToggleSize);
    position: absolute;
    left: 0;
    top: 0;
}

.toggle__label:before {
    border: var(--uiToggleBorderWidth) solid var(--uiToggleColor);
    z-index: 2;
}

.toggle__input:disabled~.toggle__label:before {
    border-color: var(--uiToggleDisabledColor);
}

.toggle__input:focus~.toggle__label:before {
    box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
}

.toggle__input:not(:disabled):checked:focus~.toggle__label:after {
    box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
}

.toggle__input:not(:disabled)~.toggle__label:after {
    background-color: var(--uiToggleColor);
    opacity: 0;
}

.toggle__input:not(:disabled):checked~.toggle__label:after {
    opacity: 1;
}

.toggle__text {
    /* margin-top: auto; */
    margin-bottom: auto;
    width: 400px;
}


/*
The arrow size and position depends from sizes of square because I needed an arrow correct positioning from the top left corner of the element toggle
*/

.toggle__text:before {
    content: "";
    box-sizing: border-box;
    width: 0;
    height: 0;
    font-size: var(--uiToggleSize);
    border-left-width: 0;
    border-bottom-width: 0;
    border-left-style: solid;
    border-bottom-style: solid;
    border-color: var(--uiToggleArrowColor);
    position: absolute;
    top: .5428em;
    left: .2em;
    z-index: 3;
    transform-origin: left top;
    transform: rotate(-40deg) skew(10deg);
}

.toggle__input:not(:disabled):checked~.toggle__label .toggle__text:before {
    width: .5em;
    height: .25em;
    border-left-width: var(--uiToggleArrowWidth);
    border-bottom-width: var(--uiToggleArrowWidth);
    will-change: width, height;
    transition: width .1s ease-out .2s, height .2s ease-out;
}


/*
=====
LEVEL 2. PRESENTATION STYLES
=====
*/


/* 
The demo skin
*/

.toggle__label:before,
.toggle__label:after {
    border-radius: 6px;
}


/* 
The animation of switching states
*/

.toggle__input:not(:disabled)~.toggle__label:before,
.toggle__input:not(:disabled)~.toggle__label:after {
    opacity: 1;
    transform-origin: center center;
    will-change: transform;
    transition: transform .2s ease-out;
}

.toggle__input:not(:disabled)~.toggle__label:before {
    transform: rotateY(0deg);
    transition-delay: .2s;
}

.toggle__input:not(:disabled)~.toggle__label:after {
    transform: rotateY(90deg);
}

.toggle__input:not(:disabled):checked~.toggle__label:before {
    transform: rotateY(-90deg);
    transition-delay: 0s;
}

.toggle__input:not(:disabled):checked~.toggle__label:after {
    transform: rotateY(0deg);
    transition-delay: .2s;
}

.toggle__text:before {
    opacity: 0;
}

.toggle__input:not(:disabled):checked~.toggle__label .toggle__text:before {
    opacity: 1;
    transition: opacity .1s ease-out .3s, width .1s ease-out .5s, height .2s ease-out .3s;
}


/*
=====
LEVEL 3. SETTINGS
=====
*/

.toggle {
    --toggleColor: #2ecc71;
    --toggleBgColor: #3b8771;
    --toggleSize: 25px;
}

.page {
    margin: auto;
    padding-left: 25px;
    padding-right: 25px;
    order: 1;
}

.page__toggle {
    font-size: 20px;
    font-weight: 700;
    color: #245239;
}

.page__toggle:nth-child(n) {
    margin-top: 15px;
    margin-left: 25px;
    margin-right: 10px;
    margin-bottom: 5px;
}

.box {
    background: white;
    width: 600px;
    height: 500px;
    border-radius: 15px;
    margin: 0 auto 0 auto;
    padding: 0px 0px 0px 0px;
    text-align: left;
    border: #08B9BB 4px solid;
    justify-content: space-around;
    align-items: flex-start;
    position: inherit;
}

p {
    text-align: right;
    padding: 15px 20px;
}

ul {
    list-style-type: none;
    margin: 0px 0px 20px 0px;
    padding: 0;
    background-color: #08B9BB;
    height: 47px;
}

li {
    float: left;
}

li a:hover {
    background-color: #111;
}

li a {
    display: block;
    color: white;
    text-align: center;
    padding: 14px 14px;
    text-decoration: none;
}

button {
    /* box-sizing: border-box; */
    float: right;
    appearance: none;
    background-color: transparent;
    border: 0px solid #da1616;
    border-radius: 3em;
    color: #da1616;
    cursor: pointer;
    display: block;
    align-self: center;
    font-size: 0.2rem;
    line-height: 1;
    margin: 0px 10px;
    padding: 1em 2em;
    text-decoration: none;
    text-align: center;
    text-transform: uppercase;
    font-family: 'Montserrat', sans-serif;
}

#addtododiv {
    border: 0px solid gray;
    height: 40px;
    margin: 10px;
    width: 500px;
    font-size: 25px;
    background-color: #08B9BB;
}